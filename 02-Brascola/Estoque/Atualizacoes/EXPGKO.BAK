#INCLUDE "rwmake.ch"
#INCLUDE "protheus.ch"

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³ OKGERATXTº Autor ³ Wanderley          º Data ³  25/04/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao chamada pelo botao OK na tela inicial de processamenº±±
±±º          ³ to. Executa a geracao do arquivo texto.                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao chamada pelo botao OK na tela inicial de processamenº±±
±±º          ³ to. Executa a geracao do arquivo texto.                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºAlteracoes³ 19.10.05 - Daniel Neves - Alteracao do programa EXPGKO paraº±±
±±º          ³            criacao de TXT apos a impressao de relatorio de º±±
±±º          ³            transferencia de transportadora. u_expgko2      º±±
±±º          ³ 06.09.06 - Elias Reis - Alteracao das posicoes de impressaoº±±
±±º          ³            dos dados referentes ao REDESPACHO.             º±±
±±º          ³ 28.05.08 - Elias Reis Unificadao de 2 programas existentes:º±±
±±º          ³            ExpGKO  -> Funcao para o usuario criar arqs.    º±±
±±º          ³            ExpGKO2 -> Funcao executada automaticamente.    º±±
±±º          ³            Criacao de um parametro na chamada da funcao    º±±
±±º          ³            para diferenciar os locais de chamada para exe- º±±
±±º          ³            cucao da mesma:                                 º±±
±±º          ³            Parametro cPar = Nil - Chamada no menu do usuariº±±
±±º          ³                      cPar = .T. - Chamada automaticamente. º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Esta funcao  de geracao do arquivo para o GKO e chamada pelo menu de usuario ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
User Function ExpGKO(lAuto)

Local cDia
Local cHora
Local aRegs    := {}
Local cPerg    := U_CRIAPERG("GKO")

Private _cLocal
Private cAlias
Private cArqTxt
Private nHdl
Private cEOL   := "CHR(13)+CHR(10)"
Private lAut   := Iif(lAuto==Nil.or.lAuto==.f.,.f.,.t.)

If !lAut
	AADD(aRegs,{cPerg,"01","Data Emissao de    ?"," "," ","mv_ch1","D", 08,0,0,"G","","mv_par01","","","","","","","","","","","","","","","","","","","","","","","","","   ","","","",""})
	AADD(aRegs,{cPerg,"02","Data Emissao ate   ?"," "," ","mv_ch2","D", 08,0,0,"G","","mv_par02","","","","","","","","","","","","","","","","","","","","","","","","","   ","","","",""})
	AADD(aRegs,{cPerg,"03","Local de Gravacao  ?"," "," ","mv_ch3","C", 40,0,0,"G","","mv_par03","","","","","","","","","","","","","","","","","","","","","","","","","   ","","","",""})
	
	lValidPerg(cPerg)
	
	Pergunte(cPerg,.T.)
Endif

_cLocal 	:= If(lAut,AllTrim(GetMV("BR_GKODIR")),AllTrim(mv_par03) )
(cAlias) 	:= If(lAut,"TMP","SF2")
cDia		:= Dtoc(dDataBase)
cDia 		:= Subs(cDia,1,2)+Subs(cDia,4,2)+Subs(cDia,7,4)
cHora 	:= Time()
cHora 	:= Subs(cHora,1,2)+Subs(cHora,4,2)+Subs(cHora,7,2)
cArqTxt 	:= AllTrim(_cLocal)+If(Right(AllTrim(_cLocal),1)=="\","","\")+"FRDNE"+cDia+cHora+".TXT"

nHdl    	:= fCreate(cArqTxt)

If Empty(cEOL)
	cEOL := CHR(13)+CHR(10)
Else
	cEOL := Trim(cEOL)
	cEOL := &cEOL
Endif

If nHdl == -1
	MsgAlert("O arquivo de nome "+cArqTxt+" nao pode ser executado! Verifique os parametros.","Atencao!")
	Return
Endif

If lAut
	cQrSF2 := "SELECT * "
	cQrSF2 += "FROM "+RetSqlName("SF2")+"  "
	cQrSF2 += "WHERE F2_FILIAL = '01' AND F2_OK2 NOT IN('    ', 'GKO') AND "+RetSqlName("SF2")+".D_E_L_E_T_ <> '*' "
	//	cQrSF2 += "WHERE F2_FLAGROM = '1' AND "+RetSqlName("SF2")+".D_E_L_E_T_ <> '*' "
	
	cQrSF2 += "ORDER BY F2_DOC, F2_SERIE "
	dBUseArea(.T.,"TOPCONN",TcGenQry(,,cQrSF2),(cAlias),.F.,.F.)
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a regua de processamento                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Processa({|| RunCont() },"Processando...")

dbCloseArea((cAlias))

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFun‡„o    ³ RUNCONT  º Autor ³ Wanderley          º Data ³  25/04/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescri‡„o ³ Funcao auxiliar chamada pela PROCESSA.  A funcao PROCESSA  º±±
±±º          ³ monta a janela com a regua de processamento.               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ EXPGKO                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RunCont

Local nTamLin, cLin, cCpo
Local lCabec := .F.
Local cEndEnt
Local cBaiEnt
Local cCidEnt
Local cEstEnt
Local cCepEnt
Local cTipFre
Local nPesoBru
Local nPesoLiq
Local aRetInfo := {}
Local nFrete := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria perguntas                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Set Century on

ProcRegua(RecCount()-Recno()) // Numero de registros a processar

nTamLin := 99
cLin    := Space(nTamLin)+cEOL // Variavel para criacao da linha do registros para gravacao

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Substitui nas respectivas posicioes na variavel cLin pelo conteudo  ³
//³ dos campos segundo o Lay-Out. Utiliza a funcao STUFF insere uma     ³
//³ string dentro de outra string.                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

// cabecalho
cCpo := PADR("000",03)              	// Registro Header
cLin := Stuff(cLin,01,03,cCpo)
cCpo := PADR("INTDNE",10)				// Nome Interface
cLin := Stuff(cLin,04,10,cCpo)
cCpo := PADR("5.0a",06)					// Versão GKO
cLin := Stuff(cLin,14,06,cCpo)
cCpo := PADR("BRASCOLA LTDA",40)		// Remetente do arquivo
cLin := Stuff(cLin,20,40,cCpo)
cCpo := PADR("GKO Frete",40)        	// Destinatario do arquivo
cLin := Stuff(cLin,60,40,cCpo)

GravaLin(nHdl, cLin)
DbSelectArea((cAlias))

If !lAut
	DbSetOrder(10) // Filial+Emissao
	DbSeek(xFilial(("SF2"))+DTOS(mv_par01))
EndIf

cCondicao := If(lAut,.T.,'SF2->F2_FILIAL==xFilial("SF2") .And. SF2->F2_EMISSAO>=mv_par01 .And. SF2->F2_EMISSAO<=mv_par02')

While !Eof() .And. IF(lAut,.t.,&cCondicao)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Incrementa a regua                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	IncProc()
	
	nFrete 	:= (cAlias)->F2_FRETE
	nTamLin 	:= 216
	cLin    	:= Space(nTamLin)+cEOL 			// Limpa cLin
	
	If (cAlias)->F2_TIPO $ "DB"
		
		dbSelectArea("SA2") // Localiza cliente
		dbSetOrder(1)
		IF DBSEEK( XFILIAL("SA2") + (cAlias)->F2_CLIENTE + (cAlias)->F2_LOJA)
			
			// Linha detalhe do cliente
			cCpo := PADR("100",03)
			cLin := Stuff(cLin,01,03,cCpo)			// Fixo 100 - Cliente
			cCpo := PADR("A",01)
			cLin := Stuff(cLin,04,01,cCpo)			// Fixo A
			cCpo := PADR(SA2->A2_CGC,15)
			cLin := Stuff(cLin,05,15,cCpo)			// CGC do Cliente
			cCpo := PADR("2",01)
			cLin := Stuff(cLin,20,01,cCpo)			// Parc.Comercial - Cliente - Fixo "2"
			cCpo := PADR(SA2->A2_COD,06)
			cLin := Stuff(cLin,21,06,cCpo)			// Codigo do Cliente
			cCpo := PADR(" ",08)
			cLin := Stuff(cLin,27,08,cCpo)			// Posiciona proximo campo - Fixo space(8)
			cCpo := PADR(AllTrim(u_DelChrEsp(SA2->A2_NOME)),40)
			cLin := Stuff(cLin,35,40,cCpo)		   	// Razao Social do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA2->A2_END)),1,40),40)
			cLin := Stuff(cLin,75,40,cCpo)			// Endereco do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA2->A2_BAIRRO)),1,20),20)
			cLin := Stuff(cLin,115,20,cCpo)			// Bairro do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA2->A2_MUN)),1,20),20)
			cLin := Stuff(cLin,135,20,cCpo)			// Cidade do Cliente
			cCpo := PADR(SA2->A2_EST,02)
			cLin := Stuff(cLin,165,02,cCpo)			// Estado do Cliente
			//cCpo := PADR(" ",08)
			cCpo := PADR(SA2->A2_CEP,08)
			cLin := Stuff(cLin,167,08,cCpo)			// Branco   //CEP RODOLFO
			cCpo := PADR(SA2->A2_CEP,08)
			cLin := Stuff(cLin,175,08,cCpo)			// CEP
			cCpo := PADR(Iif(SA2->A2_TIPO=="F","1","2"),01)
			cLin := Stuff(cLin,183,01,cCpo)			// Tipo de Pessoa - 1=Fisica 2=Juridica
			//cCpo := PADR(Subs(SA2->A2_INSCR,1,15),15)
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA2->A2_INSCRM)),1,15),15)
			cLin := Stuff(cLin,184,15,cCpo)			// Inscricao Estadual
			//cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA2->A2_INSCRM)),1,15),15)
			cCpo := PADR(Subs(SA2->A2_INSCR,1,15),15)
			cLin := Stuff(cLin,200,15,cCpo)			// Inscricao Municipal
			cCpo := PADR(Iif(SA2->A2_TIPO=="F","0","1"),01) // Se for Consumidor Final, não é contribuinte.
			cLin := Stuff(cLin,214,01,cCpo)			// Cont.ICMS 0-Nao 1-Sim
			cCpo := "0"
			cLin := Stuff(cLin,215,01,cCpo)			// Regime de Credito de ICMS 0-Nao
			cCpo := "0"
			cLin := Stuff(cLin,216,01,cCpo)			// Elimina Referencias Externas 0-Nao
			
			GravaLin(nHdl, cLin)
			
			nTamLin := 430
			cLin    := Space(nTamLin)+cEOL 			// Limpa cLin
			
			cEndEnt := AllTrim(u_DelChrEsp(SA2->A2_END))
			cBaiEnt := AllTrim(u_DelChrEsp(SA2->A2_BAIRRO))
			cCidEnt := AllTrim(u_DelChrEsp(SA2->A2_MUN))
			cEstEnt := AllTrim(u_DelChrEsp(SA2->A2_EST))
			cCepEnt := AllTrim(u_DelChrEsp(SA2->A2_CEP))
			cTipFre := "C"
		EndIf
		
	Else
		dbselectArea("SA1") // Localiza cliente
		dbSetOrder(1)
		If dbSeek( xFilial("SA1")+(cAlias)->F2_CLIENTE+(cAlias)->F2_LOJA)
			// Linha detalhe do cliente
			cCpo := PADR("100",03)
			cLin := Stuff(cLin,01,03,cCpo)			// Fixo 100 - Cliente
			cCpo := PADR("A",01)
			cLin := Stuff(cLin,04,01,cCpo)			// Fixo A
			cCpo := PADR(SA1->A1_CGC,15)
			cLin := Stuff(cLin,05,15,cCpo)			// CGC do Cliente
			cCpo := PADR("2",01)
			cLin := Stuff(cLin,20,01,cCpo)			// Parc.Comercial - Cliente - Fixo "2"
			cCpo := PADR(SA1->A1_COD,06)
			cLin := Stuff(cLin,21,06,cCpo)			// Codigo do Cliente
			cCpo := PADR(" ",08)
			cLin := Stuff(cLin,27,08,cCpo)			// Posiciona proximo campo - Fixo space(8)
			cCpo := PADR(AllTrim(u_DelChrEsp(SA1->A1_NOME)),40)
			cLin := Stuff(cLin,35,40,cCpo)		   	// Razao Social do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA1->A1_END)),1,40),40)
			cLin := Stuff(cLin,75,40,cCpo)			// Endereco do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA1->A1_BAIRRO)),1,20),20)
			cLin := Stuff(cLin,115,20,cCpo)			// Bairro do Cliente
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA1->A1_MUN)),1,20),20)
			cLin := Stuff(cLin,135,20,cCpo)			// Cidade do Cliente
			cCpo := PADR(SA1->A1_EST,02)
			cLin := Stuff(cLin,165,02,cCpo)			// Estado do Cliente
			cCpo := PADR(SA1->A1_CEP,08)
			//	cCpo := PADR(" ",08)
			cLin := Stuff(cLin,167,08,cCpo)			// Branco
			cCpo := PADR(SA1->A1_CEP,08)
			cLin := Stuff(cLin,175,08,cCpo)			// CEP
			cCpo := PADR(Iif(SA1->A1_PESSOA=="F","1","2"),01)
			cLin := Stuff(cLin,183,01,cCpo)			// Tipo de Pessoa - 1=Fisica 2=Juridica
			//cCpo := PADR(Subs(SA1->A1_INSCR,1,15),15)
			cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA1->A1_INSCRM)),1,15),15)
			cLin := Stuff(cLin,184,15,cCpo)			// Inscricao Estadual
			//cCpo := PADR(Subs(AllTrim(u_DelChrEsp(SA1->A1_INSCRM)),1,15),15)//Inscricao Municipal
			cCpo := PADR(Subs(SA1->A1_INSCR,1,15),15)
			cLin := Stuff(cLin,199,15,cCpo)			// Inscricao Estadual
			cCpo := PADR(Iif(SA1->A1_TIPO=="F","0","1"),01) // Se for Consumidor Final, não é contribuinte.
			cLin := Stuff(cLin,214,01,"1")			// Cont.ICMS 0-Nao 1-Sim
			cCpo := "0"
			cLin := Stuff(cLin,215,01,cCpo)			// Regime de Credito de ICMS 0-Nao
			cCpo := "0"
			cLin := Stuff(cLin,216,01,cCpo)			// Elimina Referencias Externas 0-Nao
			GravaLin(nHdl, cLin)
			nTamLin := 430
			cLin    := Space(nTamLin)+cEOL 			// Limpa cLin
			cEndEnt := AllTrim(u_DelChrEsp(SA1->A1_ENDENT))
			cBaiEnt := AllTrim(u_DelChrEsp(SA1->A1_BAIRROE))
			cCidEnt := AllTrim(u_DelChrEsp(SA1->A1_MUNE))
			cEstEnt := AllTrim(u_DelChrEsp(SA1->A1_ESTE))
			cCepEnt := AllTrim(u_DelChrEsp(SA1->A1_CEPE))
			cTipFre := AllTrim(u_DelChrEsp(SA1->A1_TPFRET))
		EndIf
		
	EndIf
	
	DbSelectArea(cAlias)
	
	aRetInfo := RetInfo()
	
	DbSelectArea(cAlias)
	
	// Linha Header da NF
	cCpo := PADR("140",03)
	cLin := Stuff(cLin,01,03,cCpo)			// Fixo 140 - Header NF
	cCpo := PADR("A",01)
	cLin := Stuff(cLin,04,01,cCpo)			// Fixo A
	cCpo := PADR("1",01)
	cLin := Stuff(cLin,05,01,cCpo)			// Tipo de Documento 1-Nota Fiscal
	cCpo := PADR("1",01)
	cLin := Stuff(cLin,06,01,cCpo)			// Emitente da NF - Brascola
	//	cCpo := PADR("000002",06)
	
	If  SM0->M0_CODFIL == '01'
		
		cCpo := PADR("000002",06)
		
	Elseif SM0->M0_CODFIL == '02'
		
		cCpo := PADR("000003",06)
		
	Elseif SM0->M0_CODFIL == '03'
		
		cCpo := PADR("000004",06)
		
	Elseif SM0->M0_CODFIL == '04'
		
		cCpo := PADR("087859",06)
		
	Elseif SM0->M0_CODFIL == '08'
		
		cCpo := PADR("099384",06)
		
	Endif
	
	cLin := Stuff(cLin,07,06,cCpo)			// Codigo da Brascola no Cadastro de Emitente - Fixo 000002
	//cCpo := Space(08) 
	cCpo := Space(13)//- Fernando: 14/01/12
	cLin := Stuff(cLin,13,13,cCpo)			// Posiciona proximo campo - Fixo space(8)
	//cCpo := PADR((cAlias)->F2_DOC,06)
	cCpo := PADR((cAlias)->F2_DOC,09)//- Fernando: 14/01/12
	//cLin := Stuff(cLin,21,06,cCpo)//- Fernando: 14/01/12
	cLin := Stuff(cLin,21,09,cCpo)			// Numero da Nota Fiscal
	cCpo := Space(06)
	//cLin := Stuff(cLin,21,06,cCpo) //- Fernando: 14/01/12	
	cLin := Stuff(cLin,30,06,cCpo)			// Posiciona proximo campo
	cCpo := PADR((cAlias)->F2_SERIE,03)
	cLin := Stuff(cLin,33,03,cCpo)			// Serie da NF
	//QUANDO FOR AUTOMATICO, TENHO QUE CONVERTER O FORMATO DA DATA
	cData := If(!lAut,dtos((cAlias)->F2_EMISSAO),(cAlias)->F2_EMISSAO)
	cCpo := PADR(SUBSTR(cData,7,2)+"/"+SUBSTR(cData,5,2)+"/"+SUBSTR(cData,1,4),10)
	cLin := Stuff(cLin,36,10,cCpo)			// Data da Emissao da NF
	//QUANDO FOR AUTOMATICO, TENHO QUE CONVERTER O FORMATO DA DATA
	cData := If(!lAut,dtos((cAlias)->F2_DTSAIDA),(cAlias)->F2_DTSAIDA)
	cCpo := PADR(SUBSTR(cData,7,2)+"/"+SUBSTR(cData,5,2)+"/"+SUBSTR(cData,1,4),10)
	cLin := Stuff(cLin,46,10,cCpo)			// Data de Embarque
	cCpo := PADR("2",01)
	cLin := Stuff(cLin,56,01,cCpo)			// Tipo de Nota 1-Entrada 2-Saida
	cCpo := PADR("2",01)
	cLin := Stuff(cLin,57,01,cCpo)			// Parc.Comercial - Cliente
	cCpo := PADR((cAlias)->F2_CLIENTE,06)
	cLin := Stuff(cLin,58,06,cCpo)			// Codigo do Emitente
	cCpo := PADR(" ",08)
	cLin := Stuff(cLin,64,08,cCpo)			// Posiciona Proximo Campo
	cCpo := PADR(cEndEnt,40)
	cLin := Stuff(cLin,72,40,cCpo)			// End.Entrega Cliente
	cCpo := PADR(cBaiEnt,20)
	cLin := Stuff(cLin,112,20,cCpo)			// Bairro Entrega Cliente
	cCpo := PADR(cCidEnt,30)
	cLin := Stuff(cLin,132,30,cCpo)			// Cidade Entrega Cliente
	cCpo := PADR(cEstEnt,02)
	cLin := Stuff(cLin,162,02,cCpo)			// Estado Entrega Cliente
	cCpo := PADR(cCEPEnt,08)
	cLin := Stuff(cLin,164,08,cCpo)			// CEP Entrega Cliente
	cCpo := Space(08)
	cLin := Stuff(cLin,172,08,cCpo)			// Cod.Zona Transporte
	cCpo := Space(12)
	cLin := Stuff(cLin,180,12,cCpo)			// Nro.Docto.Negociacao de Frete
	cCpo := PADR(aRetInfo[1],04)
	cLin := Stuff(cLin,192,04,cCpo)			// Tipo de Nota Fiscal
	cCpo := Space(10)
	cLin := Stuff(cLin,196,10,cCpo)			// Cod.Equipamento(truck, bau, etc)
	cCpo := Space(04)
	cLin := Stuff(cLin,206,04,cCpo)			// Cod.Embalagem
	cCpo := "1"                             // Meio de transporte 1-Viario, 2-etc...
	// Deixar fixo "1" até 2a.ordem - Hernane 26/04/05
	cLin := Stuff(cLin,210,01,cCpo)			// Via de Transporte conf.Tabela Magnus
	cCpo := Space(03)
	cLin := Stuff(cLin,211,03,cCpo)			// Posiciona Proximo Campo
	cCpo := Padr(SUBSTR((cAlias)->F2_VEND1,2,6),05)
	cLin := Stuff(cLin,214,05,cCpo)			// Codigo do Representante
	cCpo := Space(05)
	cLin := Stuff(cLin,219,05,cCpo)			// Cod.Território
	cCpo := Space(10)
	cLin := Stuff(cLin,224,10,cCpo)			// Ident.Embarque - Bco até segunda ordem
	cCpo := Space(10)
	cLin := Stuff(cLin,234,10,cCpo)			// Romaneio
	
	If EMPTY(MV_PAR02)
		cCpo := SUBSTR(MV_PAR05,2,5)
	Else
		cCpo := Padr(SUBSTR((cAlias)->F2_TRANSP,2,5),15)
	Endif
	
	cLin := Stuff(cLin,244,15,cCpo)			// Codigo Transportadora
	cCpo := Padr(Iif(cTipFre=="C","1","2"),01)
	cLin := Stuff(cLin,259,01,cCpo)			// Frete 1=CIF, 2=Fob
	//cCpo := Space(10)
	
	If !EMPTY(MV_PAR02)
		
		IF EMPTY((cAlias)->F2_REDESP )
			cCpo := Padr(AllTrim((cAlias)->F2_REDESP),06)
		ELSE
			cCpo := Padr('5'+substr((cAlias)->F2_REDESP,2,6),06)
		ENDIF
	Else
		IF EMPTY(MV_PAR06)
			cCpo := Padr(AllTrim(MV_PAR06),06)
		ELSE
			cCpo := Padr('5'+substr(MV_PAR06,2,6),06)
		ENDIF
	Endif
	cLin := Stuff(cLin,260,15,cCpo)			// Transp.Redespacho
	
	If !EMPTY(MV_PAR02)
		
		IF EMPTY((cAlias)->F2_REDESP )
			cCpo := Padr(AllTrim((cAlias)->F2_REDESP),06)
		ELSE
			cCpo := Padr('0'+substr((cAlias)->F2_REDESP,2,6),06)
		ENDIF
	Else
		IF EMPTY(MV_PAR06)
			cCpo := Padr(AllTrim(MV_PAR06),06)
		ELSE
			cCpo := Padr('0'+substr(MV_PAR06,2,6),06)
		ENDIF
	Endif
	cLin := Stuff(cLin,275,06,cCpo)			// Ref.Transp.Redespacho
	
	cCpo := Space(14)
	cLin := Stuff(cLin,281,9,cCpo)			// Transp.Redespacho
	
   	if SA1->A1_X_TPRED == 'C'
		cCpo := "1"                             // Fixo "1" até 2a.Ordem (Atualmente não existe outra forma - Hernane - 26/04/05
	ELSEIF SA1->A1_X_TPRED == 'F'
		cCpo := "2"                             // Fixo "1" até 2a.Ordem (Atualmente não existe outra forma - Hernane - 26/04/05
	ELSE
		cCpo := "1"                             // Fixo "1" até 2a.Ordem (Atualmente não existe outra forma - Hernane - 26/04/05
	ENDIF
	cLin := Stuff(cLin,290,01,cCpo)			// Frete Redespacho 1=Cif, 2=Fob
	cCpo := Space(12)
	cLin := Stuff(cLin,291,12,cCpo)			// Nro.Docto.vinculado somente se <> NF
	cCpo := Space(03)
	cLin := Stuff(cLin,303,03,cCpo)			// Serie docto vinculado
	cCpo := Padr(aRetInfo[2],06)
	cLin := Stuff(cLin,306,06,cCpo)			// Nat.Operacao
	cCpo := "0"
	cLin := Stuff(cLin,312,01,cCpo)			// Frete Isento de ICMS 0=Nao, 1=Sim
	cCpo := "0"                             // Fixo "0" - Provisorio - Hernane - 26/04/05
	cLin := Stuff(cLin,313,01,cCpo)			// Cred.ICMS s/Frete 0=Nao, 1=Sim
	cCpo := "1"                             // Fixo "1" - Provisorio - Hernane - 26/04/05
	cLin := Stuff(cLin,314,01,cCpo)			// Subst.Trib.s/frete 0=Nao, 1=Sim
	IF (cAlias)->F2_TIPO $ 'B/D'
		cCpo := PADR(Iif(SA2->A2_TIPO=="F","1","0"),01) // Se consumidor final é "1"
	ELSE
		cCpo := PADR(Iif(SA1->A1_TIPO=="F","1","0"),01) // Se consumidor final é "1"
	ENDIF
	cLin := Stuff(cLin,315,01,cCpo)			// Dest.Mercadoria 0=Normal, 1=Uso-consumo
	cCpo := Space(15)
	cLin := Stuff(cLin,316,15,cCpo)			// Peso Bruto - manter branco
	cCpo := Space(15)
	cLin := Stuff(cLin,331,15,cCpo)			// Peso Cubado - manter branco
	cCpo := Space(15)
	cLin := Stuff(cLin,346,15,cCpo)			// Peso Liquido - manter branco
	cCpo := StrZero((cAlias)->F2_VOLUME1,6)
	cLin := Stuff(cLin,361,06,cCpo)			// Qtde Volumes
	cCpo := Space(15)
	cLin := Stuff(cLin,367,15,cCpo)			// Valores nao inclusos nos itens
	cCpo := Space(10)
	cLin := Stuff(cLin,382,10,cCpo)			// Moeda em que estaa expressos os valores
	cCpo := "0"
	cLin := Stuff(cLin,392,01,cCpo)			// Entrega urgente 0=Nao, 1=Sim
	cCpo := "0"
	cLin := Stuff(cLin,393,01,cCpo)			// Frete diferenciado 0=Nao, 1=Sim
	cCpo := Space(10)
	cLin := Stuff(cLin,394,10,cCpo)			// Data de entrega somente para NF Entrada
	cCpo := Space(15)
	cLin := Stuff(cLin,404,15,cCpo)			// Responsavel p/ frete
	cCpo := Space(10)
	cLin := Stuff(cLin,419,10,cCpo)			// Data tabela de preco do frete - Branco
	cCpo := "0"
	cLin := Stuff(cLin,429,01,cCpo)			// Exclui itens antes de importar 0=Não, 1=Sim
	cCpo := "0"
	cLin := Stuff(cLin,430,01,cCpo)			// Exclui ref.Externas antes de importar 0=Não, 1=Sim
	
	GravaLin(nHdl, cLin)
	
	DbSelectArea("SD2")
	DbSetOrder(3)
	DbSeek(xFilial("SD2")+(cAlias)->F2_DOC+(cAlias)->F2_SERIE)
	Do While (cAlias)->F2_FILIAL+(cAlias)->F2_DOC+(cAlias)->F2_SERIE == xFilial("SD2")+SD2->D2_DOC+SD2->D2_SERIE
		nTamLin := 137
		cLin    := Space(nTamLin)+cEOL 			// Limpa cLin
		// Linha Material
		cCpo := PADR("150",03)
		cLin := Stuff(cLin,001,03,cCpo)			// Fixo 150 - Material
		cCpo := PADR("A",01)
		cLin := Stuff(cLin,04,01,cCpo)			// Fixo A
		DbSelectArea("SB1")
		DbSetOrder(1)
		If DbSeek(xFilial("SB1")+SD2->D2_COD)
			cCpo := Padr(Subs(SB1->B1_DESC,1,40),40)
			nPesoBru := SB1->B1_PESBRU
			nPesoLiq := SB1->B1_PESO
		Else
			cCpo := Space(40)
		EndIf
		DbselectArea("SD2")
		cLin := Stuff(cLin,005,40,cCpo)			// Descricao do Material
		cCpo := Padr(SD2->D2_COD,20)
		cLin := Stuff(cLin,045,20,cCpo)			// Cod.Item
		cCpo := "0000"							// Fixo "0000" por não existir Familia Comercial - Hernane - 26/04/05
		cLin := Stuff(cLin,065,04,cCpo)			// Familia Comercial
		cCpo := Space(68)
		cLin := Stuff(cLin,069,68,cCpo)			// Resto do Registro
		
		GravaLin(nHdl, cLin)
		
		nTamLin := 171
		cLin    := Space(nTamLin)+cEOL 			// Limpa cLin
		
		// Linha Item da Nota
		cCpo := "160"
		cLin := Stuff(cLin,001,03,cCpo)			// Fixo 160 - Item da Nota
		cCpo := PADR("A",01)
		cLin := Stuff(cLin,04,01,cCpo)			// Fixo A
		cCpo := PADR("1",01)
		cLin := Stuff(cLin,05,01,cCpo)			// Emitente da NF - Brascola
		//	cCpo := "000002"
		// cCpo := "087859"
		
		
		If  SM0->M0_CODFIL == '01'
			
			cCpo := PADR("000002",06)
			
		Elseif SM0->M0_CODFIL == '02'
			
			cCpo := PADR("000003",06)
			
		Elseif SM0->M0_CODFIL == '03'
			
			cCpo := PADR("000004",06)
			
		Elseif SM0->M0_CODFIL == '04'
			
			cCpo := PADR("087859",06)
			
		Elseif SM0->M0_CODFIL == '08'
			
			cCpo := PADR("099384",06)
			
		Endif
		
	
		cLin := Stuff(cLin,06,06,cCpo)			// Cod.Brascola Cad.Emitente
		cCpo := Space(11)
		cLin := Stuff(cLin,12,11,cCpo)			// Posiciona proximo campo
		cCpo := PADR(SD2->D2_DOC,09)
		cLin := Stuff(cLin,20,09,cCpo)			// Numero da Nota Fiscal
		cCpo := Space(06)
		cLin := Stuff(cLin,29,06,cCpo)	     	// Posiciona proximo campo
		cCpo := PADR(SD2->D2_SERIE,03)
		cLin := Stuff(cLin,32,03,cCpo)			// Serie NF
		cCpo := PADR(SD2->D2_ITEM,03)
		cLin := Stuff(cLin,35,03,cCpo)			// Item NF
		cCpo := PADR(SD2->D2_COD,20)
		cLin := Stuff(cLin,38,20,cCpo)			// Codigo Item
		IF nFrete > 0
			cCpo := PADR(StrZero((SD2->D2_VALBRUT)*100,12),12)
			nFrete := 0
		ELSE
			cCpo := PADR(StrZero((SD2->D2_VALBRUT)*100,12),12)
		ENDIF
		cLin := Stuff(cLin,58,12,cCpo)			// Valor total do item
		cCpo := PADR(StrZero(nPesoBru*100*SD2->D2_QUANT,15),15)
		cLin := Stuff(cLin,70,15,cCpo)			// Peso Bruto Total do Item
		cCpo := Space(15)
		cLin := Stuff(cLin,85,15,cCpo)			// Peso Cubado - Bco
		cCpo := PADR(StrZero(nPesoLiq*100*SD2->D2_QUANT,15),15)
		cLin := Stuff(cLin,100,15,cCpo)			// Peso liquido total do item.
		cCpo := Space(04)
		cLin := Stuff(cLin,115,04,cCpo)			// Nro.Volumes do item - Verficar???
		cCpo := Space(10)
		cLin := Stuff(cLin,119,10,cCpo)			// Vlr.Cubagem - Bco
		cCpo := PADR(SD2->D2_CONTA,15)
		cLin := Stuff(cLin,129,15,cCpo)			// Conta Contabil
		cCpo := PADR(SD2->D2_CCUSTO,10)
		cLin := Stuff(cLin,144,10,cCpo)			// Centro de Custo
		cCpo := StrZero(Val(Subs(StrZero(SD2->D2_QUANT*1000000,15),1,11)),15)
		cLin := Stuff(cLin,154,15,cCpo)			// quantidade faturada do item
		cCpo := PADR(SD2->D2_UM,03)
		cLin := Stuff(cLin,169,03,cCpo)			// Unidade de medida do item
		
		GravaLin(nHdl, cLin)
		
		DbSelectArea("SD2")
		dbSkip()
	EndDo
	
	DbSelectArea((cAlias))
	DbSkip()
	
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ O arquivo texto deve ser fechado, bem como o dialogo criado na fun- ³
//³ cao anterior.                                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

fClose(nHdl)           

TcSqlExec("UPDATE "+RetSqlName('SF2')+" SET F2_OK2 = 'GKO' WHERE F2_FILIAL = '01' AND F2_OK2 NOT IN ('    ','GKO')") 

MsgInfo("Arquivo Gerado com sucesso no diretorio " +alltrim( _cLocal) + ", por favor, verificar!!" )

Set Century off

Return

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ GravaLin º Autor ³ Wanderley          º Data ³  25/04/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Cria as perguntas novas para o GKO                         º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ EXPGKO                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function GravaLin(nHdl, cLin)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Gravacao no arquivo texto. Testa por erros durante a gravacao da    ³
//³ linha montada.                                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If fWrite(nHdl,cLin,Len(cLin)) != Len(cLin)
	If !MsgAlert("Ocorreu um erro na gravacao do arquivo. Continua?","Atencao!")
	Endif
Endif

Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetInfo   º Autor ³ Wanderley          º Data ³  26/04/05   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna Tipo da Nota e CFOP a partir de uma regra determi- º±±
±±º          ³ nada                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ EXPGKO                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function RetInfo()

Local aArea := GetArea()
Local cTipo := Space(04)

DbSelectArea("SD2")
DbSetOrder(3)
If DbSeek(xFilial("SD2")+(cAlias)->(F2_DOC+F2_SERIE))
	If 	Subs(SD2->D2_CF,1,2) == "51"  .or.;
		Subs(SD2->D2_CF,1,2) == "54"  .or.;
		Subs(SD2->D2_CF,1,3) == "550" .or.;
		Subs(SD2->D2_CF,1,2) == "61"  .or.;
		Subs(SD2->D2_CF,1,2) == "64"  .or.;
		Subs(SD2->D2_CF,1,3) == "650"
		cTipo := "VDA "
		//EndIf
	ElseIf 	Subs(SD2->D2_CF,1,3) == "515" .or.;
		Subs(SD2->D2_CF,1,3) == "615"
		cTipo := "TRF "
		//EndIf
	ElseIf 	SD2->D2_CF == "5911" .or.;
		SD2->D2_CF == "6911" .or.;
		SD2->D2_CF == "7949"
		cTipo := "AMT "
		//EndIf
	ElseIf 	SD2->D2_CF == "5910" .or.;
		SD2->D2_CF == "6910" .or.;
		SD2->D2_CF == "7910"
		cTipo := "BON "
	Else
		cTipo := "VDA "
	EndIf
	
EndIf

RestArea(aArea)

Return({cTipo,SD2->D2_CF})


/*
Nome do arquivo: 	FRDNEDDMMAAAAHHmmSS.TXT, onde
"FRDNE" -> Fixo
DD - Dia
MM - Mes
AA - Ano
HH - Hora
mm - Minuto
SS - Segundo
Lay Out

000INTDNE    5.0a  BRASCOLA LTDA                           GKO Frete
100A69194454000147 2008259        M.N.TERUYA COML.FERR.LTDA               AV ARICANDUVA,4053                      V.ARICANDUVA        SAO PAULO                     SP00357405        2113641687116                  100
140A11000002        360840      1  30/03/2005          22008259                                                                                                                                VDA               1   00400                         00994          1                                              5101  0010                                                                            00                                   00
150ABRASCOVED KPO BRANCO 12 JOGOS A/B       0516507             9050
160A1000002        360840      1  0100516507             000000114100000000000014680               000000000010560              52110026       03130     000000000002000CX
100A04851869000109 2058551        SOMADIESEL AUTOPECAS E SERVICOS LTDA    AV JOSE SOARES PINHEIRO 2628            LOMANTO             ITABUNA                       BA04560100        255668479                      100
140A11000002        360841      1  30/03/2005          22058551                                                                                                                                VDA               1   00383                         00107          1                                              6101  0100                                                                            00                                   00
150ABRASCOVED KPO BRANCO 12 JOGOS A/B       0516507             9050
160A1000002        360841      1  0100516507             000000120929000000000014680               000000000010560              52110026       03130     000000000002000CX
150ABRASCOVED ASW 400  PRETO 12XC           0512503             9015
160A1000002        360841      1  0200512503             000000019622000000000002688               000000000002400              52110026       03130     000000000000200CX
100A41916347000166 2000791        UNIFORT LTDA                            RUA MORRO DO PILAR  29                  S. LUIZ             CONTAGEM                      MG03207346        21867997730039                 100
140A11000002        360842      1  30/03/200531/03/200522000791                                                                                                                                VDA               1   00045                         00126          1                                              6101  0100                                                                            00                                   00
150ABRASCOVED KPO BRANCO 12 JOGOS A/B       0516507             9050
160A1000002        360842      1  0100516507             000000081150000000000011010               000000000007920              52110026       03130     000000000001500CX

*/



