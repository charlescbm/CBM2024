#INCLUDE "Protheus.ch"
#INCLUDE "TopConn.ch"
#INCLUDE "TbiConn.ch"
#INCLUDE "RWMAKE.CH"

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Rdmake    ³ EFATA08  ³ Autor ³                       ³ Data ³   /  /    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Calcula Acrescimo de Acordo com a Condicao de Pagamento     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Especifico Brascola                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
User Function EFATA08(cCampo,cOrigem)
**********************************
LOCAL nPos1     := 0
LOCAL nPPrcVen  := 0
LOCAL nPValDesc := 0
LOCAL nPValor   := 0
LOCAL nPPrUnit  := 0
LOCAL nPQtdVen  := 0
LOCAL nDescont  := 0
LOCAL cProduto  := ""
LOCAL lRet      := .T.
LOCAL aArea     := GetArea()
LOCAL aAmbSE4   := SE4->( GetArea() )
LOCAL aAmbDA1   := DA1->( GetArea() )

PRIVATE nInflato:= 0
PRIVATE nPrcTab := 0
PRIVATE lrpromo := .F.
PRIVATE lpromo  := .F.
PRIVATE Inflato := 0
PRIVATE nQtdVen := 0  
PRIVATE L410AUTO:= .F.

If (cOrigem == "TMK") //Marcelo
	nPos1       := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_PRODUTO"  })//seta a posição da coluna do Produto
	cProduto    := aCols[n,nPos1]//seta o produto digitado
	nPPrcVen    := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_VRUNIT"  })//seta a posição da coluna do Preco de Venda
	nPQtdVen    := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_QUANT"   })//seta a posição da coluna da Quantidade
	nPDesc      := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_DESC"    })//seta a posição da coluna do Desconto
	nPValDesc   := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_VALDESC" })//seta a posição da coluna do Valor de Desconto
	nPValor     := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_VLRITEM" })//seta a posição da coluna do Valor
	nPPrUnit    := Ascan(aHeader,{|m| Alltrim(m[2]) == "UB_PRCTAB"  })//seta a posição da coluna do Valor Unitario
Else
	nPos1       := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRODUTO"  })//seta a posição da coluna do Produto
	cProduto    := aCols[n,nPos1]//seta o produto digitado
	nPPrcVen    := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRCVEN"  })//seta a posição da coluna do Preco de Venda
	nPQtdVen    := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_QTDVEN"  })//seta a posição da coluna da Quantidade
	nPDesc      := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_DESCONT" })//seta a posição da coluna do Desconto
	nPValDesc   := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_VALDESC" })//seta a posição da coluna do Valor de Desconto
	nPValor     := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_VALOR"   })//seta a posição da coluna do Valor
	nPPrUnit    := Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRUNIT"  })//seta a posição da coluna do Valor Unitario
Endif

nValDesc :=  aCols[n,nPValDesc]
If (cOrigem == "TMK") //Marcelo
	cCondPg := AllTrim(M->UA_CONDPG) //Marcelo
	cTabela	:= AllTrim(M->UA_TABELA) //Marcelo
Else
	cCondPg := AllTrim(M->C5_CONDPAG) //Fernando
	cTabela	:= AllTrim(M->C5_TABELA) //Fernando
Endif

//Verifica de qual campo a rotina foi chamada.
If (cCampo != Nil).and.(cCampo == "UB_PRODUTO")
	cProduto := M->UB_PRODUTO
	nQtdVen := aCols[n,nPQtdVen]
Elseif (cCampo != Nil).and.(cCampo == "C6_QTDVEN")
	nQtdVen := M->C6_QTDVEN //seta o valor constante na memória
Elseif (cCampo != Nil).and.(cCampo == "UB_QUANT")
	nQtdVen := M->UB_QUANT //seta o valor constante na memória
Else
	nQtdVen := aCols[n,nPQtdVen]
EndIf

dbSelectArea("DA1")
dbSetOrder(1)
If dbSeek( XFILIAL("DA1") + cTabela + cProduto)
	nPrcTab := DA1->DA1_PRCVEN
EndIf

IF l410auto <> .T.
	If !Empty(cCondPg)
		dbSelectArea("SE4")
		dbSetOrder(1)
		If dbSeek(xFilial("SE4")+cCondPg)
			nInflato := SE4->E4_INFLATO
		EndIf
		
		/*
		if cCampo == "C6_QTDVEN"
			lpromo:=VERPROMO()
		endif
		if cCampo <> "C6_QTDVEN" .and. len(acols) > 0 
			lpromo:=VPROMO1()
		endif
		*/
		//if !lpromo
			If nInflato < 0
				nInflato := (100 - (nInflato * -1)) / 100
				nPrcTab := nPrcTab * nInflato
			Else
				nInflato := (nPrcTab * nInflato) / 100
				nPrcTab  := nPrcTab + nInflato
			EndIf
		//EndIf
	
	Else
		MsgStop(OemToAnsi("Condição de Pagamento não encontrada !"))
		MsgBox(OemToAnsi("Solução : Aperte (ESC) e digite a Condição de Pagamento!"))
		lret := .F.
	EndIf
	
ELSE
	
	If !Empty(cCondPg)
		
		dbSelectArea("SE4")
		dbSetOrder(1)
		If dbSeek(xFilial("SE4")+cCondPg)
			nInflato := SE4->E4_INFLATO
		EndIf
		
/*		
		lpromo:=VPROMO1()
    */
      //  if !lpromo
			If nInflato < 0
				nInflato := (100 - (nInflato * -1)) / 100
				nPrcTab := nPrcTab * nInflato
			Else
				nInflato := (nPrcTab * nInflato) / 100
				nPrcTab  := nPrcTab + nInflato
			EndIf
		//EndIf
        
	ENDIF
	
ENDIF

nPrcTab            := nPrcTab
aCols[n,nPQtdVen]  := nQtdVen
aCols[n,nPPrcVen]  := nPrcTab
aCols[n,nPPrUnit]  := nPrcTab   //Preco de Tabela
//aCols[n,nPDesc]  := 0          
aCols[n,nPDesc]    := 0 //Fernando: 03/07/13
aCols[n,nPValor]   := NoRound(aCols[n,nPPrcVen] * nQtdVen)
aCols[n,nPValDesc] := NoRound((aCols[n,nPPrUnit] - aCols[n,nPPrcVen]) * nQtdVen)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaurando Integridade. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aAmbSE4)
RestArea(aAmbDA1)
RestArea(aArea)
Return(lRet)

/******************************************** VERIFICA CADASTRO DE PROMOCAO ***************************/
//Funcao para verificar no campo Produto
STATIC Function VERPROMO()

LOCAL nUnit  := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRCVEN" })] //Grava na variavel
LOCAL cProd  := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRODUTO" })]
LOCAL nQtd   := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_QTDVEN" })]
LOCAL cTab   := AllTrim(C5_TABELA)
LOCAL cCli   := AllTrim(C5_CLIENTE)
LOCAL cTipo  := AllTrim(C5_TIPO)
LOCAL cParam := "BR_000004" //Cliente Brascola

//seleciona tabela de preços


dbSelectArea("DA1")
dbSetOrder(1)
If DA1->(dbSeek(xFilial("DA1")+cTab+cProd))//posiciona na tabela de preço x produto
	nPrcTab := DA1->DA1_PRCVEN //captura o preço da tabela de preços
	nUnitNov:= nPrcTab
EndIf

//seleciona tabela de clientes
dbSelectArea("SA1")
dbSetOrder(1)
If SA1->(dbSeek(xFilial("SA1")+cCli))//posiciona o Cliente selecionado no pedido
	cGrpCli := SA1->A1_GRPVEN //Grupo de Clientes
	cCliente:=SA1->A1_COD 
	_VEND   :=SA1->A1_VEND
EndIf
 
SA3->(DBSEEK(XFILIAL("SA3")+_VEND))
_GRPREP:=SA3->A3_GRPREP

_cQuery1 :="  SELECT ZZR_DESCPR,ZZQ_DESCRI,ZZQ_CODPRO,ZZQ_CODREG FROM "+RetSQLName("ZZR")+" ZZR , "+RetSQLName("ZZQ")+" ZZQ "
_cQuery1 +="  WHERE ZZR_CODPRO = '"+cProd+"' AND ZZR_CODPRO = ZZQ_CODPRO "
_cQuery1 +="  AND ZZQ_TIPO = '2' AND (ZZQ.ZZQ_GRPVEN = '"+cGrpCli+"' OR ZZQ.ZZQ_GRPVEN='"+Space(Len(ZZQ->ZZQ_GRPVEN))+"') AND "
_cQuery1 +="  (ZZQ.ZZQ_CODTAB = '"+cTab+"' OR ZZQ.ZZQ_CODTAB='"+Space(Len(ZZQ->ZZQ_CODTAB))+"') "
_cQuery1 += " AND (ZZQ.ZZQ_CODCLI = '"+cCliente+"' OR ZZQ.ZZQ_CODCLI='"+Space(Len(ZZQ->ZZQ_CODCLI))+"') "
IF !EMPTY(_GRPREP)
	cQuery1 += "AND (ZZQ.ZZQ_REG1 = '"+_GRPREP+"'  OR    ZZQ.ZZQ_REG2 = '"+_GRPREP+"'   OR  ZZQ.ZZQ_REG3 = '"+_GRPREP+"' OR ZZQ.ZZQ_REG4 = '"+_GRPREP+"' OR  ZZQ.ZZQ_REG5 = '"+_GRPREP+"' OR ZZQ.ZZQ_REG6 = '"+_GRPREP+"' ) "
ENDIF
_cQuery1 +="  AND ZZR_QTDMIN <= '"+STR(nQtd)+"'   AND ZZR_QTDMAX >= '"+STR(nQtd)+"' "
_cQuery1 +="  AND (ZZQ_DATDE <= '"+DTOS(DDATABASE)+"' AND ZZQ_DATATE >= '"+DTOS(DDATABASE)+"')"

If Select("QUERY1") > 0
	QUERY1->(dbCloseArea())
EndIf


dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery1),"QUERY1",.T.,.T.)


DBSELECTAREA("QUERY1")
DBGOTOP()


IF !EOF()
	
	lrpromo:=.t.
	IF (!cCli $ GetMv("BR_000004")) .AND. (!cTipo $ "B/D")
		
		If MsgYesNo("Produto "+AllTrim(cProd)+" cadastrado na promoção."+QUERY1->ZZQ_CODPRO+" "+QUERY1->ZZQ_DESCRI+""+chr(13)+;
			"Confirmar para este item?")
			
			nUnitNov := nPrcTab - ((nPrcTab * QUERY1->ZZR_DESCPR)/100) //faz o cálculo do novo valor unitário
			//aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRUNIT" })]:=  nUnitNov
			If nInflato < 0
				nInflato := (100 - (nInflato * -1)) / 100
				nPrcTab := nUnitNov * nInflato
			Else
				nInflato := (nUnitNov * nInflato) / 100
				nPrcTab  := nUnitNov + nInflato
			EndIf
			aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_X_REGRA" })]:=  QUERY1->ZZQ_CODREG
			aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_DESCONT" })]:=  0
			aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_VALDESC" })]:=  0
			GETDREFRESH()
			SetFocus(oGetDad:oBrowse:hWnd) // Atualizacao por linha
			oGetDad:Refresh()
		else
			aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_X_REGRA" })]:=  SPACE(6)
			
			lrpromo:=.f.
		endif
		lrpromo:=.f.
	endif
endif

DBSELECTAREA("QUERY1")
dbCloseArea()

RETURN lrpromo
                               



STATIC FUNCTION VPROMO1()
*************************
LOCAL nUnit  := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRCVEN" })] //Grava na variavel
LOCAL cProd  := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRODUTO" })]
LOCAL nQtd   := aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_QTDVEN" })]
LOCAL cTab   := AllTrim(C5_TABELA)
LOCAL cCli   := AllTrim(C5_CLIENTE)
LOCAL cTipo  := AllTrim(C5_TIPO)
LOCAL cParam := "BR_000004" //Cliente Brascola

//seleciona tabela de preços


dbSelectArea("DA1")
dbSetOrder(1)
If DA1->(dbSeek(xFilial("DA1")+cTab+cProd))//posiciona na tabela de preço x produto
	nPrcTab := DA1->DA1_PRCVEN //captura o preço da tabela de preços
	nUnitNov:= nPrcTab
EndIf

//seleciona tabela de clientes
dbSelectArea("SA1")
dbSetOrder(1)
If SA1->(dbSeek(xFilial("SA1")+cCli))//posiciona o Cliente selecionado no pedido
	cGrpCli:= SA1->A1_GRPVEN //Grupo de Clientes
	cCliente:=SA1->A1_COD
	_VEND:=SA1->A1_VEND
EndIf

SA3->(DBSEEK(XFILIAL("SA3")+_VEND))
_GRPREP:=SA3->A3_GRPREP


_cQuery2 :="  SELECT ZZR_DESCPR,ZZQ_DESCRI,ZZQ_CODPRO,ZZQ_CODREG FROM "+RetSQLName("ZZR")+" ZZR , "+RetSQLName("ZZQ")+" ZZQ "
_cQuery2 +="  WHERE ZZR_CODPRO = '"+cProd+"' AND ZZR_CODPRO = ZZQ_CODPRO "
_cQuery2 +="  AND ZZQ_TIPO = '2' AND (ZZQ.ZZQ_GRPVEN = '"+cGrpCli+"' OR ZZQ.ZZQ_GRPVEN='"+Space(Len(ZZQ->ZZQ_GRPVEN))+"') AND "
_cQuery2 +="  (ZZQ.ZZQ_CODTAB = '"+cTab+"' OR ZZQ.ZZQ_CODTAB='"+Space(Len(ZZQ->ZZQ_CODTAB))+"') "
_cQuery2 +="  AND (ZZQ.ZZQ_CODCLI = '"+cCliente+"' OR ZZQ.ZZQ_CODCLI='"+Space(Len(ZZQ->ZZQ_CODCLI))+"') "
IF !EMPTY(_GRPREP)
	cQuery2 += "AND (ZZQ.ZZQ_REG1 = '"+_GRPREP+"'  OR    ZZQ.ZZQ_REG2 = '"+_GRPREP+"'   OR  ZZQ.ZZQ_REG3 = '"+_GRPREP+"' OR ZZQ.ZZQ_REG4 = '"+_GRPREP+"' OR  ZZQ.ZZQ_REG5 = '"+_GRPREP+"' OR ZZQ.ZZQ_REG6 = '"+_GRPREP+"' ) "
ENDIF
_cQuery2 +="  AND ZZR_QTDMIN <= '"+STR(nQtd)+"'   AND ZZR_QTDMAX >= '"+STR(nQtd)+"' "
_cQuery2 +="  AND (ZZQ_DATDE <= '"+DTOS(DDATABASE)+"' AND ZZQ_DATATE >= '"+DTOS(DDATABASE)+"')"




If Select("QUERY2") > 0
	QUERY2->(dbCloseArea())
EndIf


dbUseArea(.T.,"TOPCONN",TcGenQry(,,_cQuery2),"QUERY2",.T.,.T.)


DBSELECTAREA("QUERY2")
DBGOTOP()


IF !EOF()
	
	lrpromo:=.t.
	IF (!cCli $ GetMv("BR_000004")) .AND. (!cTipo $ "B/D")
		
			
			nUnitNov := nPrcTab - ((nPrcTab * QUERY2->ZZR_DESCPR)/100) //faz o cálculo do novo valor unitário
			//aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_PRUNIT" })]:=  nUnitNov
			If nInflato < 0
				nInflato := (100 - (nInflato * -1)) / 100
				nPrcTab := nUnitNov * nInflato
			Else
				nInflato := (nUnitNov * nInflato) / 100
				nPrcTab  := nUnitNov + nInflato
			EndIf
			aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_X_REGRA" })]:=  QUERY2->ZZQ_CODREG
		//	aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_DESCONT" })]:=  0
		//	aCols[n,Ascan(aHeader,{|m| Alltrim(m[2]) == "C6_VALDESC" })]:=  0
		   //	GETDREFRESH()
		//	SetFocus(oGetDad:oBrowse:hWnd) // Atualizacao por linha
		//	oGetDad:Refresh()
	endif
endif

DBSELECTAREA("QUERY2")
dbCloseArea()

RETURN lrpromo
