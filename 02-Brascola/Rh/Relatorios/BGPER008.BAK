/*
Diretiva: #INCLUDE  

A diretiva #INCLUDE indica em que arquivo de extensao *.CH (padrao ADVPL) estao os UDCs
a serem utilizados pelo pre-processador.
A aplicacao ERP possui diversos includes, os quais devem ser utilizados segundo a aplicacao
que sera desenvolvida, o que permitira a utilizacao de recursos adicionais definidos para a
linguagem, implementados pela area de Tecnologia da Microsiga.
Os includes mais utilizados nas aplicacoes ADVPL desenvolvidas para o ERP sao:
 
PROTHEUS.CH: diretivas de compilacao padroes para a linguagem. Contem a
especificacao da maioria das sintaxes utilizadas nos fontes, inclusive permitindo a
compatibilidade da sintaxe tradicional do Clipper para os novos recursos implementados
no ADVPL.

O include PROTHEUS.CH ainda contem a referencia a outros includes utilizadas pela
linguagem ADVPL que complementam esta funcionalidade de compatibilidade com a
sintaxe Clipper, tais como:
o DIALOG.CH
o FONT.CH
o INI.CH
o PTMENU.CH
o PRINT.CH    

A utilizacao do include protheus.ch nos fontes desenvolvidos para a
aplicacao ERP Protheus e obrigatoria e necessaria ao correto funcionamento das aplicacoes.
 
AP5MAIL.CH: Permite a utilizacao da sintaxe tradicional na definicao das seguintes
funcoes de envio e recebimento de e-mail:
o CONNECT SMTP SERVER
o CONNECT POP SERVER
o DISCONNECT SMTP SERVER
o DISCONNECT POP SERVER
o POP MESSAGE COUNT
o SEND MAIL FROM
o GET MAIL ERROR
o RECEIVE MAIL MESSAGE
 
TOPCONN.CH: Permite a utilizaco da sintaxe tradicional na definido das seguintes
funcoes de integracao com a ferramenta TOPCONNECT (MP10 Totvs DbAcess):
o TCQUERY  

TBICONN.CH: Permite a utilizacao da sintaxe tradicional na definicao de conexoes com
a aplicacao Server do ambiente ERP, atraves da seguintes sintaxes:
o CREATE RPCCONN
o CLOSE RPCCONN
o PREPARE ENVIRONMENT
o RESET ENVIRONMENT
o OPEN REMOTE TRANSACTION
o CLOSE REMOTE TRANSACTION
o CALLPROC IN
o OPEN REMOTE TABLES

XMLXFUN.CH: Permite a utilizacao da sintaxe tradicional na manipulacao de arquivos e
strings no padrao XML, atraves das seguintes sintaxes:
o CREATE XMLSTRING
o CREATE XMLFILE
o SAVE XMLSTRING
o SAVE XMLFILE
o ADDITEM TAG
o ADDNODE NODE
o DELETENODE
*/  

#include "rwmake.ch" //biblioteca mais antiga que permite compatibilidade com programas mais antigos
#include "totvs.ch"//biblioteca rerente a diversa funcoes de relatorio e telas
#include "protheus.ch" //biblioteca rerente a diversa funcoes de relatorio e telas
#include "topconn.ch" //biblioteca refente a funcoes de banco de dados
       


/*Nessa area colocasse uma Documentacao de Cabecalho
Isso venha a ser uma boa pratica de programacao onde devemos inserir informacoes basicas do programa
como autor, data de criacao, nome do programa, descricao breve do que sera o programa, qual o modulo, etc...  */

/*
+----------------------------------------------------------------------------+
!                         FICHA TECNICA DO PROGRAMA                          !
+----------------------------------------------------------------------------+
!   DADOS DO PROGRAMA                                                        !
+------------------+---------------------------------------------------------+
!Tipo              ! Relatório                                               !
+------------------+---------------------------------------------------------+
!Modulo            ! GPE - Gestão de Pessoal                                 !
+------------------+---------------------------------------------------------+
!Nome              ! BGPER008                                                !
+------------------+---------------------------------------------------------+
!Descricao         ! Relatório Funcionários                                  !
+------------------+---------------------------------------------------------+
!Autor             ! FERNANDO SIMOES DA MAIA                                 !
+------------------+---------------------------------------------------------+
!Data de Criacao   ! 15/10/2013                                              !
+------------------+---------------------------------------------------------+
*/

/*
 Funcao principal do Programa
*/
User Function BGPER008()

/*Declaracao de variaveis, podem ser:
 Local : Variaveis de escopo local são pertencentes apenas ao escopo da funcao onde foram declaradas
         e devem ser explicitamente declaradas com o identificador LOCAL
 
 Static: Variaveis de escopo static funcionam basicamente como as variaveis de escopo local, mas
         mantem seu valor atraves da execucao e devem ser declaradas explicitamente no codigo com o identificador STATIC

 Private: Uma vez criada, uma variavel privada continua a existir e mantem seu valor ate que o programa ou funcao onde foi criada termine (ou seja,
          ate que a funcao onde foi criada retorne para o codigo que a executou)
          
 Public: As variaveis deste escopo continuam a existir e mantem seu valor ate o fim da execucao da thread (conexao)
*/
Private oReport  // declaracao de variavel do tipo objeto que recebera a instancia da classe TREPORT     
Private cPerg   := PADR("BGPER008",10)   //Recebe o nome da pergunta que sera colocada no SX1 no campo X1_GRUPO, onde este indica o grupo de perguntas que sera usado no programa
                                       //Funcao PADR(): http://tdn.totvs.com/pages/viewpage.action?pageId=24347023
                                       
Private aOrd:= {"Matricula" , "Nome" } //Array contendo as opcoes de ordenacao
Private cAlias := GetNextAlias() //o cAlias recebe um nome de uma tabela temporaria sequencial sem precisar especificar por exemplo uma TRB, evitando assim a possibilidade de ter um erro de alias em uso. 
                                 //entao toda a vez que rodar essa rotina o nome da tabela temporaria que sera armazenado a query sera diferente.  

Private cOrdem := "" //variavel do tipo string que recebera o conteudo do ORDER BY no SQL para realizar a ordenacao. 
 
oReport := ReportDef(cPerg) //ReportDef, funcao que implementa o layout, estrutura do relatorio.


U_BCFGA002("BGPER008")//Grava detalhes da rotina usada, o programa BCFGA002 e um programa customizado

BGPER08B(cPerg) //executa a funcao BGPER08B, onde esta faz a criacao do grupo de perguntas no SX1.
         

/*
PERGUNTE()

A funcao PERGUNTE() inicializa as variaveis de pergunta (mv_par01,…) baseada na pergunta cadastrado no Dicionario de Dados (SX1). Se o parametro lAsk nao for especificado ou for verdadeiro sera exibida a tela para edicao da pergunta e se o usuario confirmar as variaveis serao atualizadas e a pergunta no SX1 tambem sera atualizada.

Sintaxe: Pergunte( cPergunta , [lAsk] , [cTitle] )

Parametros:

cPergunta: Pergunta cadastrada no dicionario de dados ( SX1) a ser utilizada.

Ask:       Indica se exibira a tela para edicao.

cTitle:    Titulo do dialogo.

Retorno: Logico Indica se a tela de visualizacao das perguntas foi confirmada (.T.) ou cancelada (.F.)
*/
If Pergunte(cPerg,.T.)
	oReport:PrintDialog()
EndIf

Return  


//Funcao que ira fazer a montagem do Layout/Estrutura do Relatorio 
Static Function ReportDef(cPerg)
//Local oReport
Local oSection1 //declaracao de variavel do tipo objeto que sera instanciada da classe TSECTION para criacao de uma secao no relatorio.
Local cTitulo := "Relatorio de Funcionarios" //declaracao e inicializacao da variavel string que recebera o titulo do relatorio
Local aTabelas:= {"SRA", "SRJ", "CTT"}//declaracao e inicializacao da variavel do tipo array que recebera as tabelas que serao utilizadas neste relatorio



//Nesta area esta sendo efetuado a inicializacao da variavel do tipo objeto oReport que esta sendo instanciado da classe TREPORT
oReport:= TReport():New("BGPER008",cTitulo,cPerg,{|oReport| PrintReport(oReport)},cTitulo)//New: metodo construtor da classe TReport
                                                                                         //Documentacao: http://tdn.totvs.com/display/public/mp/New 

oReport:SetLandscape()//Metodo SetLandScape: usuado para definir um padrao na inicializacao da propriedade Retrato/Paisagem do relatorio
                      //Documentacao: http://tdn.totvs.com/display/public/mp/SetLandscape
                       
oReport:SetTotalInLine(.F.) //Metodo SettotalInLine: define se serao impressos os totalizadores em linha ou coluna
                            //Documentacao: http://tdn.totvs.com/display/public/mp/SetTotalInLine
                   

/*
Propriedades da Classe TReport:

aBreak	Array com todas as quebras totalizadoras do relatório. Elemento: 1-Objeto TRBreak.
aCollection		Array com todos totalizadores do tipo TRCollection do relatório. 
Elemento: 1-Objeto TRCollection.
aCustomText		Array contendo a customização para impressão do cabeçalho padrão. 
Elementos: 1=Texto a ser impresso, no qual, um elemento por linha. Existem algumas strings que pode auxiliar na criação do cabeçalho:
	__NOLINEBREAK__ - Não quebra linha
	__NOTRANSFORM__ - Imprime sem nenhum tratamento
	__LOGOEMP__ - Imprime o logo da empresa
	__FATLINE__ - Imprime um linha grossa
	__THINLINE__ - Imprime uma linha fina
aBmps	Array com as imagens dos gráficos enviadas por email. Elemento: 1- Caminho da imagem.
aFontSize	Array com as fontes do sistema. Elementos: 1-Fonte, 2-Tamanho, 3- Tamanho em pixel.
aFunction		Array com todos totalizadores do tipo TRFunction do relatório. 
Elemento: 1-Objeto TRFunction.
aHeaderPage		Array com todas as seções que imprimem cabeçalho no topo da página.
aSection		Array com todas as seções do relatório. Elemento: 1-Objeto TRSection.
bAction		            Bloco de código executado quando o usuário confirmar a impressão do relatório.
bCustomText		Bloco de código para atualização da propriedade aCustomText.
bOnNumberPage	Bloco de código para atualização do número da página atual.
bOnPageBreak	Bloco de código para tratamentos na inicialização de cada página.
bTotal			Compatibilidade - Não utilizado.
bTotalCanPrint 	Bloco de código utilizado para validar a impressão dos totalizadores.
bTotalPos		Bloco de código utilizado para localizar a posição do totalizador a ser impresso.
bTotalPrint		Bloco de código utilizado para imprimir os totalizadores.
bTotalReset		Bloco de código utilizado para limpar os totalizadores.
bTotalRSize		Bloco de código utilizado para definir o tamanho das Collections.
bTotalText		Bloco de código utilizado na impressão do texto do totalizador.
cClassName		Nome da classe. Exemplo: TREPORT.
cDate			Data da impressão do relatório.
cDescription		Descrição do relatório.
cDir			Diretório selecionado para geração do relatório.
cEmail			E-mail utilizado na geração do relatório via e-mail.
cFontBody		Fonte definida para impressão do relatório.
cFile			Nome do arquivo que será gerado.
cID			ID do component. Exemplo: TREPORT.
cLogo			Logo da empresa/filial.
cMsgPrint		Mensagem apresentada durante a geração do relatório.
cPrinterName		Nome da impressora selecionada para impressão.
cReport		Nome do relatório. Exemplo: MATR010.
cTime			Hora da impressão do relatório.
cTitle			Título do relatório.
cRealTitle		Título padrão do relatório definido pelo criador do relatório.
cUserObs		Observação do usuário.
cXlsTHStyle		Estilo do cabeçalho padrão utilizado na geração da planilha.
cXlsSHStyle		Estilo do cabeçalho utilizado na geração da planilha.
cXmlDefault		Arquivo XML contendo Informações do relatório padrão.
cXlsFile		Nome do arquivo que será gerado em planilha.
lBold			Aponta que as Informações serão impressas em negrito.
lCanceled		Aponta que o relatório foi cancelado.
lClrBack		Define que a cor de fundo deverá ser atualizada.
lClrFore		Define que a cor da fonte deverá ser atualizada.
lDisableOrientation	Orientação (Retrato/Paisagem) não poderá ser modificada.
lDynamic	Aponta que o relatório é dinâmico, permitindo imprimir as seções conforme a ordem de impressão selecionada.
lEdit			Relatório não poderá ser configurado pelo usuário.
lEnabled		Impressão do relatório foi desabilitada.
lEmptyLineExcel	Suprime as linhas em branco e os totais na geração em planilha.
lFooterVisible		Habilita a impressão do rodapé.
lFunctionBefore	Imprime os totalizadores do tipo TRFunction antes dos totalizadores do tipo TRCollecions.
lHeaderVisible		Habilita a impressão do cabeçalho.
lItalic			Aponta que as informações serão impressas em itálico.
lOnPageBreak		Cabeçalho das seções impressas após a quebra de página.
lPageBreak		Quebra página antes da impressão dos totalizadores.
lParamPage		Existe parâmetros para impressão.
lParamReadOnly	Parâmetros não poderão ser alterados pelo usuário.
lPixColSpace		Espaçamento das colunas serão calculadas em pixel.
lPreview		Visualização do relatório antes da impressão física.
lPrinting		Relatório esta em processo de impressão.
lPrtParamPage		Aponta que serão impressos os parâmetros do relatório.
lStartPage		Aponta que uma nova página deverá se inicializada.
lTotalInLine		Imprime as células no formato linha.
lTPageBreak		Quebra página após a impressão do totalizador.
lUnderline		Aponta que as Informações serão impressas sublinhadas.
lUserAccess		Valida permissão para geração dos gráficos do relatório.
lUserInfo		Imprime Informações do usuário na página de parâmetros.
lUserFilter		Permite a utilização de filtros na personalização do relatório.
lXlsHeader		Imprime informações do cabeçalho padrão na geração em planilha.
lNoPrint		Aponta que nenhuma informação foi impressa.
lXmlEndRow		Aponta fim de linha na geração em planilha.
lXlsParam		Aponta a existência de parâmetros na geração em planilha.
lEndReport		Imprime total geral do relatório.
nBorderDiff		Tamanho da borda utilizado para cálculo da altura de uma linha.
nClrBack		Cor de fundo.
nClrFore		Cor da fonte.
nCol			Coluna posiciona na impressão.
nColSpace		Espaçamento entre as colunas.
nDevice	Tipo de impressão selecionado. Opções: 1-Arquivo,2-Impressora,3-email,4-Planilha e 5-Html.
nEnvironment		Ambiente selecionado. Opções: 1-Server e 2-Cliente.
nFontBody		Tamanho da fonte definida para impressão do relatório.
nHeaderDiff		Tamanho do cabeçalho utilizado para cálculo do altura da página.
nLeftMargin		Tamanho da margem a esquerda.
nLineHeight		Altura da linha.
nLogPxYDiff		Utilizado no cálculo para geração da visualização do relatório.
nLogPxXDiff		Utilizado no cálculo para geração da visualização do relatório.
nMeter			Posição da régua de progressão.
nOrder			Ordem de impressão selecionada.
nPageWidth		Largura da página.
nPxColSpace		Espaçamento da coluna em pixel.
nPxBase		Tamanho da  base em pixel.
nPxDate		Tamanho da  sistema operacional em pixel.
nPxLeftMargin		Tamanho da margem a esquerda em pixel.
nPxPage		Tamanho da numeração da página em pixel.
nPxTitle		Tamanho do título em pixel.
nRemoteType	Aponta de que forma o Server está gerando o relatório. Opções:  1-Sem Remote, 2-Remote Delphi,3-Remote Windows e 4-Remote Linux.
nRow			Linha posicionada na impressão.
nXlsCol		Coluna posicionada na geração em planilha.
nXlsRow		Linha posicionada na geração em planilha.
nXlsStyle		Estilo utilizado na geração em planilha.
nExcel			Número do arquivo na geração em planilha.
nColumnPos		Posicionamento no arquivo gerado em planilha.
oBrdBottom		Objeto TRBorder com a borda Inferior .
oBrdLeft		Objeto TRBorder com a borda à esquerda.
oBrdRight		Objeto TRBorder com a borda à direita.
oBrdTop		Objeto TRBorder com a borda superior.
oHBrdBottom		Objeto TRBorder com a borda Inferior no cabeçalho.
oHBrdLeft		Objeto TRBorder com a borda à esquerda no cabeçalho.
oHBrdRight		Objeto TRBorder com a borda à direita no cabeçalho.
oHBrdTop		Objeto TRBorder com a borda superior no cabeçalho.
oClrBack		Objeto TBrush com a cor de Fundo.
oFontBody		Objeto TFont com a fonte do relatório.
oFontHeader		Objeto TFont com a fonte do cabeçalho.
oMeter			Objeto TMeter com a régua de progressão.
oMsg			Objeto TSAY com a mensagem apresentada durante a impressão do relatório.
oPage			Objeto TRPage com a configuração da página de impressão.
oParamPage		Objeto TRParamPage com a configuração da página de parâmetros.
oPrint			Objeto TMSPrinter.
oReport		Componente de impressão.
oXlsCell		Compatibilidade - Não utilizado.
oXlsRow		Compatibilidade - Não utilizado.
oXlsStyles		Compatibilidade - Não utilizado.
oXlsWorksheet	Compatibilidade - Não utilizado.
uParam		Parâmetros do relatório cadastrado no Dicionário de Perguntas (SX1).
Também pode ser utilizado bloco de código para parâmetros customizados.

*/
oReport:nFontBody := 8 //Propriedade nFontBody: define o tamanho da fonte utilizado no relatorio
oReport:ShowHeader() //Metodo que define que sera impresso o cabeçaalho do relatorio.
      
      
 /*Definicao da Sessao do relatorio
 Propriedades:

aCell			Array contendo as células da seção. Elemento: 1-Objeto TRCell.
aCellPos		Array contendo as células reposicionadas da seção. Elemento: 1-Objeto 
TRCell.
aFilter			Array  contendo os filtros da seção: Elementos: 1-Tabela, 2-Filtro, 3-
 Chave de Índice, 4-Ordem.
aOrder			Array contendo as ordens do relatório: Elementos: 1-Objeto TROrder.
aPosCell		Array com as células da seção na ordem de impressão.
aTable			Array com as tabelas utilizadas na seção.
aTCFields	Array com os campos que possuem o tipo de dados diferente de caracter e que devem ser tratados para apresentar os resultados na query. Elementos: 1-Campo, 2-Tipo, 3- Tamanho e 4-Decimal.
aTCMemo		Array com os campos do tipo de dados Memo a serem desconsiderados na query.
aTCTables		Array com as tabelas utilizadas na query.
aLoadCells	Array com as tabelas que executaram o carregamento de Informações das células através do Dicionário de Dados (SX3).
aUserFilter	Array  com os filtros de usuários: Elementos: 1-Tabela, 2-Expressão ADVPL, 3-Expressão SQL e 4-Filtro adicionado na query principal.
aNoFilter		Array com as tabelas que não poderão aplicar filtros de usuário. Elemento: 1-Tabela.
aSection		Array com as seções filhas. Elemento: 1-Objeto TRSection.
bCompQuery	Bloco de código utilizado na montagem  da query através de compilação em tempo real.
bLineCondition	Bloco de código utilizado na validação do registro.
bOnPrintLine	Bloco de código com os tratamentos a serem realizados antes da impressão do registro da seção.
bParentFilter		Bloco de código com a regra para saída do loop.
bParentParam	Bloco de código com a expressão que retorna o valor que é enviado como parâmetro para a regra de saída do loop da seção.
bRealQuery		Bloco de código utilizado para montar a query da seção.
cAlias			Tabela principal da seção.
cAdvplExp		Filtro do usuário em forma de expressão ADVPL.
cDynamicKey		Chave que identifica a seção na impressão dinâmica.
cFilter			Filtro da tabela principal da seção.
cIdxFile		Indice temporário utilizado na filtro da tabela principal.
cName			Nome da seção.
cQuery			Query da seção com os tratamentos de adição de campos e filtros.
cRealFilter		Filtro da tabela principal da seção.
cRealQuery		Query sem os tratamentos de adição de campos e filtros.
cCharSeparator	Caracter que separa as Informações na impressão em linha.
cSqlExp		Filtro do usuário em forma de expressão SQL.
lAutoSize		Ajusta o tamanho das células para que caiba em uma página.
lCellPos		Ajusta o cabeçalho das células.
lChangeQuery		Tratamento para utilizar a query em diversos Banco de Dados.
lChkFilters		Compatibilidade - Não utilizado.
lEdit			Aponta se a seção poderá ser personalizada pelo usuário.
lEditCell		Aponta se o usuário poderá personalizar as células da seção.
lForceLineStyle	Força a impressão em linha.
lHeaderBreak		Imprime cabeçalho da seção na quebra de impressão (TRBreak).
lHeaderPage		Imprime cabeçalho da seção no topo da página.
lHeaderSection	Imprime cabeçalho da seção na quebra de seção.
lIdxOrder		Utiliza ordem do Dicionário de Índices (SIX) na impressão da seção.
lInit			Aponta que a impressão da seção não foi iniciada.
lInitFilter		Aponta que os filtros da seção não foram iniciados.
lLineBreak	Aponta que a impressão da seção quebra linhas no caso das colunas não couberem em uma linha.
lLineStyle		Impressão em linhas.
lSkipped		Aponta que a seção saltou o registro da seção pai.
lParentQuery		Utiliza Informações da query da seção pai para impressão dos registros.
lParentRecno		Utiliza Informações do registro da seção pai.
lPrintHeader		Aponta impressão do cabeçalho da seção.
lPrintLayout		Aponta que é impressão de visualização do layout.
lReadOnly		Define se o usuário pode personalizar informações da seção.
lTCFields	Define que deverá ser efetuado tratamento na query de campos com tipo de dado diferente de caracter.
lVisible			Aponta que a seção será impressa.
lUserVisible		Aponta que a seção será impressa na personalização do usuário.
lCellUseQuery		Utiliza query na impressão de células da seção.
nCols			Quantidade de colunas a serem impressas.
nIdxOrder		Indice utilizado na impressão da seção.
nLineCount		Quantidade de linhas a serem impressas para o registro.
nLinesBefore		Quantidade de linhas a serem saltadas antes da impressão da seção.
nOrder			Ordem de impressão da seção.
nPercentage		Percentual da largura da página a ser considerada.
nRow			Linha posicionada na impressão da seção.
nWidth			Largura da seção.
oCBrdBottom		Objeto TRBorder com a borda Inferior.
oCBrdLeft		Objeto TRBorder com a borda à esquerda.
oCBrdRight		Objeto TRBorder com a borda à direita.
oCBrdTop		Objeto TRBorder com a borda superior.
oParent		Seção pai.
oRelation		Objeto TRRelation com informações do relacionamento entre as seções.

 */        
 
 /* 
Metodo construtor da classe TRSection.

New(oParent,cTitle,uTable,aOrder,lLoadCells,lLoadOrder,uTotalText,lTotalInLine,lHeaderPage,lHeaderBreak,lPageBreak,lLineBreak,nLeftMargin,lLineStyle,nColSpace,lAutoSize,cCharSeparator,nLinesBefore,nCols,nClrBack,nClrFore,nPercentage)

oParent	        Objeto da classe TReport ou TRSection que será o pai da classe TRSection
cTitle		    Título da seção
uTable		    Tipo Caracter: Tabela que será utilizada pela seção
Tipo Array:     Lista de tabelas que serão utilizadas pela seção
aOrder	        Array contendo a descrição das ordens. Elemento: 1-Descrição, como por exemplo, Filial+Código
lLoadCells	    Carrega os campos do Dicionário de Campos (SX3) das tabelas da seção como células
lLoadOrder	    Carrega os índices do Dicionário de Índices (SIX)
uTotalText	    Texto do totalizador da seção, podendo ser caracter ou bloco de código
lTotalInLine	Imprime as células em linha
lHeaderPage	    Cabeçalho da seção no topo da página
lHeaderBreak	Imprime cabeçalho na quebra da seção
lPageBreak	    Imprime cabeçalho da seção na quebra de página
lLineBreak	    Quebra a linha na impressão quando as Informações não caber na página
nLeftMargin	    Tamanho da margem à esquerda da seção
lLineStyle	    Imprime a seção em linha
nColSpace	    Espaçamento entre as colunas
lAutoSize	    Ajusta o tamanho das células para que caiba em uma página
cCharSeparator	Define o caracter que separa as Informações na impressão em linha
nLinesBefore	Aponta a quantidade de linhas a serem saltadas antes da impressão da seção
nCols		    Quantidade de  colunas a serem impressas
nClrBack	    Cor de fundo das células da seção
nClrFore	    Cor da fonte das células da seção
nPercentage	    Tamanho da página a ser considerada na impressão em percentual


 */
           //TRSection():New( < oParent > , [ cTitle ] , [ uTable ] , [ aOrder ] , [ lLoadCells ] , [ lLoadOrder ] ) 
oSection1 := TRSection():New(   oReport   ,   cTitulo  ,  aTabelas  ,     aOrd   ,       .F.      ,        .F.     )  
oSection1:SetTotalInLine(.F.)//Metodo SettotalInLine: define se serao impressos os totalizadores em linha ou coluna
                            //Documentacao: http://tdn.totvs.com/display/public/mp/SetTotalInLine


    
/*
Celula de impressao de uma secao (TRSection) de um relatorio que utiliza a classe TReport.

Esta classe herda as propriedades e metodos da classe TRSECTION.

Propriedades:

aCBox     	 Array com os possíveis textos a serem impressos na célula. Elemento: 1- Conteúdo. Exemplo: 1=Sim.
aFormatCond	 Array com as condições do usuário para impressão de forma variável da cor da célula: Elementos: 1-Condição, 2-Cor de fundo e 3-Cor da fonte.
bCanPrint 	 Bloco de código que valida a impressão da célula.
bCellBlock	 Bloco de código que retornará o conteúdo de impressão da célula.
cFormula	 Fórmula para impressão da célula.
cOrder		 Ordem de impressão da célula.
cPicture	 Máscara da célula.
cRealFormula Fórmula em forma de expressão ADVPL.
cType		 Tipo de dado da célula.
cUserFunctionTipo de acumulador: "MIN" - Menor valor, "MAX" - Maior valor, "SUM" - Soma, "COUNT" - Contador ou "AVERAGE" - Média.
cXlsHStyle	 Estilo do cabeçalho padrão utilizado na geração da planilha.
cXlsStyle	 Estilo utilizado na geração da planilha.
lBold		 Aponta que a célula será impressa em negrito.
lHeaderSize	 Aponta que o tamanho a ser considerado na impressão é do cabeçalho.
lPixelSize	 Aponta que o tamanho da célula está calculada em pixel.
lPrintCell	 Aponta que a célula está habilitada para impressão.
lCellBreak	 Compatibilidade - Não utilizado.
lUserEnabled Aponta que a célula foi habilitada para impressão pelo usuário.
lUserField	 Aponta que a célula foi personalizada pelo usuário.
lUserAccess	 Aponta que o usuário tem acesso a impressão desta célula, no caso de falso, o usuário não possui o nível de campo ou acesso definido no cadastro de usuários.
nAlign		 Alinhamento da célula. 1-Esquerda, 2-Center ou 3-Direita.
nAutoWidth	 Largura gerada automaticamente quando excedida a largura da página.
nCellPixel	 Largura da célula em pixel.
nHeaderAlign Alinhamento do cabeçalho 1-Esquerda, 2-Center ou 3-Direita.
nHeaderPixel Tamanho do cabeçalho da célula em pixel.
nHeaderSize	 Tamanho do cabeçalho da célula.
nLineStart	 Aponta a primeira linha da célula a ser impressa no caso de quebra de linha.
nNegative	 Número do item de sinal negativo no array aNegative.
nPixelSize	 Tamanho da célula em pixel.
nRowDiff	 Quantidade de linhas a serem consideradas na impressão das bordas.
nSize		 Tamanho da célula.
nType		 Tipo da célula. 1-Celula, 2-Formula, 3-Acumulador ou 4-Célula de usuário.
nUserValue	 Auxilia no controle do totalizador do tipo MAX e MIN.
nUserCount	 Contador de itens impressos quando utilizado totalizadores.
nLevel		 Nível de campo da célula.
uValue		 Valor da célula a ser impresso.
uPrint		 Conteúdo da célula a ser impresso.
oFontBody	 Objeto TFont com Informações da fonte da célula.
     

Metodo construtor da classe TRCell:
New(oParent,cName,cAlias,cTitle,cPicture,nSize,lPixel,bBlock,cAlign,lLineBreak,cHeaderAlign,lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)

oParent	Objeto da classe TRSection que a célula pertence
cName		Nome da célula
cAlias		Tabela utilizada pela célula
cTitle		Título da célula
cPicture	Máscara da célula
nSize		Tamanho da célula
lPixel		Aponta se o tamanho foi informado em pixel
bBlock		Bloco de código com o retorno do campo
cAlign		Alinhamento da célula. "LEFT", "RIGHT" e "CENTER"
lLineBreak	Quebra linha se o conteúdo estourar o tamanho do campo
cHeaderAlignAlinhamento do cabeçalho da célula. "LEFT", "RIGHT" e "CENTER"
lCellBreak	Compatibilidade - Não utilizado
nColSpace	Espaçamento entre as células
lAutoSize	Ajusta o tamanho da célula com base no tamanho da página e as Informações impressas
nClrBack	Cor de fundo da célula
nClrFore	Cor da fonte da célula
lBold		Imprime a fonte em negrito


*/
  
//Definicao das colunas que serao impressas no relatorio:
//TRCell():New(oSection1,cName          ,cAlias, cTitle      ,cPicture        ,nSize ,lPixel,bBlock,cAlign  ,lLineBreak,cHeaderAlign,lCellBreak,nColSpace,lAutoSize,nClrBack,nClrFore,lBold)
TRCell():New(oSection1,"FILIAL"         ,"SRA" , "Filial"    ,                ,  10  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"MATRICULA"      ,"SRA" , "Mat"       ,                ,  20  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"NOME"           ,"SRA" , "Nome"      ,                ,  60  ,.F.   ,      ,"LEFT"  ,  .F.     , "LEFT"     ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"NASC"           ,"SRA" , "Nasc"      ,                ,  30  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"RG"             ,"SRA" , "RG"        ,                ,  20  ,.F.   ,      ,"LEFT"  ,  .F.     , "LEFT"     ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"CPF"            ,"SRA" , "CPF"       ,                ,  30  ,.F.   ,      ,"LEFT"  ,  .F.     , "LEFT"     ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"CODFUNC"        ,"SRA" , "CodFunc"   ,                ,  13  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"FUNCAO"         ,"SRJ" , "Funcao"    ,                ,  60  ,.F.   ,      ,"LEFT"  ,  .F.     , "LEFT"     ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"CC"             ,"SRA" , "CC"        ,                ,  13  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"DESCR"          ,"CTT" , "Desc"      ,                ,  40  ,.F.   ,      ,"LEFT"  ,  .F.     , "LEFT"     ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"FONE"           ,"SRA" , "Fone"      ,                ,  40  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )
TRCell():New(oSection1,"FATOR"          ,"SRA" , "Fator"     ,                ,  10  ,.F.   ,      ,"CENTER",  .F.     , "CENTER"   ,          ,   1     ,    .F.  ,        ,        ,     )


             
   
/*
SetBorder(uBorder,nWeight,nColor,lHeader)
Define as bordas da celula.

uBorder	Tipo Caracter: "TOP","BOTTOM","LEFT","RIGHT","ALL"
        Tipo Numerico: 1-Superior,2-Inferior,3-Esquerda,4-Direita,5-Todas
nWeight	Largura da borda
nColor 	Cor da borda
lHeader	Aponta se e borda de cabecalho

Retorno	Objeto do tipo TRBorder

*/   
//Definicao das bordas, nesse caso sera impressa uma borda na cor preta
//SetBorder(uBorder,nWeight,nColor,lHeader)
oSection1:Cell("FILIAL"   ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("MATRICULA"):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("NOME"     ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("NASC"     ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("RG"       ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("CPF"      ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("CODFUNC"  ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("FUNCAO"   ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)  
oSection1:Cell("CC"       ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("DESCR"    ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)   
oSection1:Cell("FONE"     ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)
oSection1:Cell("FATOR"    ):SetBorder("BOTTOM",1,CLR_BLACK,.T.)


//Definicao das bordas, nesse caso NAO sera impressa a borda, ou seja, a borda vai ser ocultada.
//SetBorder(uBorder,nWeight,nColor,lHeader)
oSection1:Cell("FILIAL"   ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("MATRICULA"):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("NOME"     ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("NASC"     ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("RG"       ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("CPF"      ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("CODFUNC"  ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("FUNCAO"   ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)  
oSection1:Cell("CC"       ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("DESCR"    ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)   
oSection1:Cell("FONE"     ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
oSection1:Cell("FATOR"    ):SetBorder("BOTTOM",1,CLR_BLACK,.F.)
  


/*
TRFUNCTION:

Totalizador de uma quebra, seção ou relatório que utiliza a classe TReport.

Um totalizador pode executar uma das seguintes funções abaixo, utilizando como referência uma célula da seção ou o retorno de uma fórmula definida para ele:

SUM 		Somar
COUNT   	Contar
MAX 		Valor máximo
MIN	     	Valor mínimo 
AVERAGE 	Valor médio
ONPRINT	    Valor atual
TIMESUM 	Somar horas
TIMEAVERAGE Valor medio de horas
TIMESUB 	Subtrai horas

Propriedades:

bCondition  	Bloco de código com a condição de atualização dos valores do totalizador.
bOnPrint    	Bloco de código para tratamentos antes da impressão do totalizador.
cFunction   	Função que será utilizada pelo totalizador. Exemplo: SUM, COUNT, MAX, MIN.
lCollection 	Se verdadeiro, aponta que o totalizador é do tipo Collection.
lEndPage    	Se verdadeiro, aponta que o totalizador será impresso no final da página.
lEndReport  	Se verdadeiro, aponta que o totalizador será impresso no final do relatório.
lEndSection 	Se verdadeiro, aponta que o totalizador será impresso no final da seção.
lPageValue  	Se verdadeiro, aponta que é impressão do total da página.
lPrintLayout	Se verdadeiro, aponta que é visualização do layout.
lReportValue	Se verdadeiro, aponta que é impressão do total geral.
lSectionValue	Se verdadeiro, aponta que é impressão do total da seção.
lPrintCollection	Se verdadeiro, aponta que é impressão de totalizador do tipo Collection.
nCount	    	Contador de registros impressos.
nCountPage  	Contador de registros impressos para a página.
nCountReport	Contador geral de registros impressos.
nCountSection 	Contador de registros impressos para a seção.
oCell	    	Objeto da classe TRCell que o totalizador se refere.
oTotal	    	Objeto da classe TRFunction ou TRCollection.
uFormula    	Tipo Caracter: Expressão ADVPL para macro execução.
                Tipo Bloco de codigo: Bloco de Código com a expressão ADVPL para execução.
uLastValue  	Ultimo valor atualizado no totalizador.
uPage	    	Total acumulado por página.
uReport     	Total acumulado geral do relatório.
uSection    	Total acumulado por seção.

     
Metodo construtor da classe TRFunction:

New(oCell,cName,cFunction,oBreak,cTitle,cPicture,uFormula,lEndSection,lEndReport,lEndPage,oParent,bCondition,lDisable,bCanPrint)

oCell		Objeto da classe TRCell que o totalizador se refere
cName		Identificação do totalizador
cFunction	Funcao que sera utilizada pelo totalizador. Exemplo: SUM, COUNT, MAX, MIN
oBreak		Objeto da classe TRBreak que define em qual quebra o totalizador será impresso
cTitle  	Título do totalizador. Se não informado será utilizado o título da célula que o totalizador se refere
cPicture	Mascara de impressão do totalizador. Se não informado será utilizado a máscara da célula que o totalizador se refere
uFormula	Tipo Caracter: Expressão ADVPL para macro execução
            Tipo Bloco de código: Bloco de Código com a expressão ADVPL para execução
lEndSection	Se verdadeiro. Indica se totalizador será impresso na quebra de seção
lEndReport	Se verdadeiro. Indica se totalizador será impresso no final do relatório
lEndPage	Se verdadeiro. Indica se totalizador será impresso no final de cada página
            oParent	Objeto da classe TRSection que o totalizador se refere
bCondition	Bloco de código com a condição de atualização dos valores do totalizador
lDisable	Se verdadeiro. Define que não irá atualizar os valores do totalizador
bCanPrint	Bloco de código com a condição de impressão dos valores do totalizador

*/

//TRFunction():New(         oCell               ,cName,cFunction,oBreak,cTitle,       cPicture      ,uFormula,lEndSection,lEndReport,lEndPage,oParent   ,bCondition,lDisable,bCanPrint)
//TRFunction():New(oSection1:Cell("VALBRUTO")     , NIL ,  "SUM"  ,  NIL ,  ""  ,"@E 999,999,999.99"  ,   NIL  ,   .F.     ,     .T.  ,   .F.  , oSection1,          ,        ,         )

dbSelectArea("SRA") //selecionando a Tabela SRA010, ou seja abrindo a mesma para ser utilizada.

dbSetOrder(oReport:GetOrder())//Retorna a ordem de impressão selecionada) //Documentacao da funcao dbSetOrder: http://tdn.totvs.com/pages/viewpage.action?pageId=23889283

Return oReport //retorna o objeto oReport com todas as definicaoes implementadas acima.
             

/*
  Funcao que vai fazer o relatorio ser impresso
*/

Static Function PrintReport(oReport/*objeto oReport retornado com todas as definicoes ja setadas na funcao ReportDef*/)

Local oSection1 := oReport:Section(1) //declaracao de variavel do tipo objeto que recebe as definicoes da primeira Secao definida no objeto oReport 
Private nOrdem  := oSection1:GetOrder() //declaracao de variavel do tipo numerico que recebe a ordem definida na primeira Secao no objeto oReport 

 
//Definicao das ordens disponiveis no relatorio, esta sera utilizada na Query:
If (nOrdem == 1  .And. MV_PAR05 = 1) //Ordem por: Matricula Crescente
	cOrdem:= "% ORDER BY RA_MAT, RA_NOME%"  
ElseIf (nOrdem == 1  .And. MV_PAR05 = 2)//Ordem por: Matricula Decrescente
	cOrdem:= "% ORDER BY RA_MAT, RA_NOME DESC%" 
ElseIf (nOrdem = 2  .And. MV_PAR05 = 1)//Ordem por: Nome Crescente
	cOrdem:= "% ORDER BY RA_NOME%" 
Else
	cOrdem:= "% ORDER BY RA_NOME DESC%" //Ordem por: Nome Decrescente
EndIf
     

//Metodo BeginQuery():Indica que sera utilizado o Embedded SQL(metodo novo da Totvs, ou seja, facilitador de queries) para criacao de uma query para a secao.
oSection1:BeginQuery()


/*Inicio, desenvolvimento e finalizacao da Query no modo Embedded SQL:
  Documentacao completa desse formato: http://tdn.totvs.com/display/tec/Embedded+SQL+-+Facilitador+de+queries         
*/
BeginSql alias "cAlias"
	SELECT RA_FILIAL FILIAL,RA_MAT MATRICULA, RA_NOME NOME, RA_NASC NASC, RA_RG RG, RA_CIC CPF, RA_CODFUNC CODFUNC,
	RJ_DESC FUNCAO, RA_CC CC, CTT_DESC01 DESCR, RA_TELEFON FONE, RA_FATORRH FATOR 
	FROM %table:SRA% SRA, %table:SRJ% SRJ, %table:CTT% CTT
	WHERE RA_MAT BETWEEN %exp:MV_PAR01% AND %exp:MV_PAR02%  
	AND RA_CC BETWEEN %exp:MV_PAR03% AND %exp:MV_PAR04%  
	AND RA_SITFOLH <> 'D'
	AND RA_CODFUNC = RJ_FUNCAO
	AND RA_FILIAL = '01'
	AND RJ_FILIAL = RA_FILIAL
	AND RA_CC = CTT_CUSTO
	AND SRA.%notDel% 
	AND SRJ.%notDel% 
	AND CTT.%notDel% 
	%exp:cOrdem% 
EndSql
               

/*
Funcao auxiliar - GetLastQuery()

Apos a abertura do cursor, no alias especificado, a função GetLastQuery() retorna um array, com 5 elementos, onde estão disponíveis as seguintes informações sobre a query executada.

 [1] cAlias - Alias usado para abrir o cursor.
 [2] cQuery - Query executada.
 [3] aCampos - Array de campos com critério de conversão especificados.
 [4] lNoParser - Caso verdadeiro (.T.), não foi utilizada a função ChangeQuery() na string original.
 [5] nTimeSpend - Tempo, em segundos, utilizado para abertura do cursor.
*/
aQuery:= GetLastQuery()//funcao que mostra todas as informacoes da query, util para visualizar na aba Comandos


oSection1:EndQuery()//finalizacao do Embedded SQL
                
/*
Init()
Executa as quebras de secoes, imprime cabecalhos entre outras configuracoes do relatorio.
Nao e necessario executar o metodo Init se for utilizar o metodo Print, ja que estes fazem o controle de inicialização e finalização da impressão.

*/
oSection1:Init()


/*
SetHeaderSection(lHeaderSection):

Define que imprime cabeçalho das células na quebra de seção.
lHeaderSection:	Se verdadeiro, aponta que imprime cabeçalho na quebra da seção
*/
oSection1:SetHeaderSection(.T.)

DbSelectArea('cAlias')//seleciona/abre a tabela setada na variavel cAlias definida na query
dbGoTop() //aponta para o primeiro registro


/*
SetMeter(nTotal)
Define o limite da regua de progressao do relatorio.
nTotal: Limite da régua

*/
oReport:SetMeter(cAlias->(RecCount()))//conta o numero de registros retornados da query
 
//faz um loop para impressao dos dados nas celulas/colunas ja definidas no objeto oSection
While cAlias->(!Eof())
    
	/*
	Cancel()
    Retorna se o usuario cancelou a impressao do relatorio.
	*/  
	If oReport:Cancel()//se usuario clicou em cancelar o sistema abandona a impressao
		Exit
	EndIf
	        
	
/*
IncMeter(nInc)
Incrementa a regua de progressao do relatorio.
nInc: Quantidade a incrementar na regua. Padrao: 1

*/	
	oReport:IncMeter() //como nao foi definido o sistema incrementa pelo valor padrao 



	//seta os conteudos nos campos
	oSection1:Cell("FILIAL"):SetValue(cAlias->FILIAL)//Metodo SetValue: define o valor para a celula
	oSection1:Cell("FILIAL"):SetAlign("CENTER")//Metodo SetAlign: define o alinhamento da celula
	
	oSection1:Cell("MATRICULA"):SetValue(cAlias->MATRICULA)
	oSection1:Cell("MATRICULA"):SetAlign("CENTER")
	
	oSection1:Cell("NOME"):SetValue(cAlias->NOME)
	oSection1:Cell("NOME"):SetAlign("LEFT")
	  
	oSection1:Cell("NASC"):SetValue(STOD(cAlias->NASC))
	oSection1:Cell("NASC"):SetAlign("CENTER") 
	
	oSection1:Cell("RG"):SetValue(cAlias->RG)
	oSection1:Cell("RG"):SetAlign("LEFT") 
	
	oSection1:Cell("CPF"):SetValue(cAlias->CPF)
	oSection1:Cell("CPF"):SetAlign("LEFT")
	
	oSection1:Cell("CODFUNC"):SetValue(cAlias->CODFUNC)
	oSection1:Cell("CODFUNC"):SetAlign("CENTER")
	
	oSection1:Cell("FUNCAO"):SetValue(cAlias->FUNCAO)
	oSection1:Cell("FUNCAO"):SetAlign("LEFT")   

	oSection1:Cell("CC"):SetValue(cAlias->CC)
	oSection1:Cell("CC"):SetAlign("CENTER")
	
	oSection1:Cell("DESCR"):SetValue(cAlias->DESCR)
	oSection1:Cell("DESCR"):SetAlign("LEFT")      
	
	oSection1:Cell("FONE"):SetValue(cAlias->FONE)
	oSection1:Cell("FONE"):SetAlign("LEFT")     
	
	oSection1:Cell("FATOR"):SetValue(cAlias->FATOR)
	oSection1:Cell("FATOR"):SetAlign("CENTER")
	         
	/*
	PrintLine(lEvalPosition,lParamPage,lExcel)
	Imprime a linha baseado nas células existentes.
	lEvalPosition: Forca a atualizacao do conteudo das celulas 
	lParamPage:	Aponta que e a impressao da pagina de parametros

	*/
	
	oSection1:PrintLine()//como nao foi usado os parametro o sistema considera o padrao
	
	dbSelectArea("cAlias") //seleciona novamente o resultado da query  
   
	//Desloca para outro registro na tabela corrente
	cAlias->(dbSkip()//Documentacao do metodo dbSkip: http://tdn.totvs.com/display/tec/DBSkip) 

EndDo //finaliza o loop do while
                  

/*
Finish()
Finaliza a impressao da secao, imprime os totalizadores, tratamentos de quebras das secoes, entre outros tratamentos do componente.
Nao e necessario executar o metodo Finish se for utilizar o metodo Print, ja que este faz o controle de inicializacao e finalizacao da impressao.
*/
oSection1:Finish()

dbSelectArea('SRA')//seleciona novamente a tabela SRA010 - Funcionarios 
dbSetOrder(1) //Seta a Ordem dos registros da tabela para o indice 1 (ver no configurador qual a ordem do indice 1 na Base de Dados para a tabela SRA

Return


//Funcao responsavel pela criacao do grupo de perguntas
Static Function BGPER08B(cPerg)
//PutSx1(cGrupo,cOrdem,  cPergunt         ,cPerSpa,cPerEng,cVar      ,cTipo,      nTam               ,nDec,nPres,cGSC,cValid,cF3	,cGrpSxg,cPyme,cVar01	  ,cDef01       ,cDefSpa1,cDefEng1,cCnt01, cDef02      ,cDefSpa2,cDefEng2,cDef03         ,cDefSpa3,cDefEng3,cDef04            ,cDefSpa4,cDefEng4, cDef05,cDefSpa5,cDefEng5, aHelpPor,aHelpEng,aHelpSpa,cHelp)
PutSX1(cPerg , "01" , "Matricula de"      , ""    , ""    , "mv_ch1" , "C" , TAMSX3("RA_MAT")[1]     , 0  , 0   , "G", ""   ,"SRA" , ""    , ""  , "mv_par01", ""            ,""      ,""      ,""    ,""           ,""      ,""      ,""             ,""      ,""      ,""                ,""      ,""      ,""     ,""      ,"")
PutSX1(cPerg , "02" , "Matricula ate"     , ""    , ""    , "mv_ch2" , "C" , TAMSX3("RA_MAT")[1]     , 0  , 0   , "G", ""   ,"SRA" , ""    , ""  , "mv_par02", ""            ,""      ,""      ,""    ,""           ,""      ,""      ,""             ,""      ,""      ,""                ,""      ,""      ,""     ,""      ,"")
PutSX1(cPerg , "03" , "CC de"             , ""    , ""    , "mv_ch3" , "C" , TAMSX3("RA_CC")[1]      , 0  , 0   , "G", ""   ,"CTT" , ""    , ""  , "mv_par03", ""            ,""      ,""      ,""    ,""           ,""      ,""      ,""             ,""      ,""      ,""                ,""      ,""      ,""     ,""      ,"")
PutSX1(cPerg , "04" , "CC ate"            , ""    , ""    , "mv_ch4" , "C" , TAMSX3("RA_CC")[1]      , 0  , 0   , "G", ""   ,"CTT" , ""    , ""  , "mv_par04", ""            ,""      ,""      ,""    ,""           ,""      ,""      ,""             ,""      ,""      ,""                ,""      ,""      ,""     ,""      ,"")
PutSX1(cPerg , "05" , "Tipo Ordem?"       , ""    , ""    , "mv_ch5" , "C" , 1                       , 0  , 0   , "C", ""   ,      , ""    , ""  , "mv_par03", "Crescente"   ,"      ","      ","    ","Decrecente" ,"      ","      ",""             ,""      ,""      ,""                ,""      ,""      ,""     ,""      ,"")
Return

